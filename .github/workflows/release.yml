name: Release

on:
  push:
    tags:
      - "v1.0.0"

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true

  build-and-upload:
    needs: release
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write

    env:
      CGO_ENABLED: "1"

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "1.22.x"

      # (same install steps as in build.yml)
      - name: Install raylib (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libraylib-dev build-essential \
            libasound2-dev libx11-dev libxi-dev libxrandr-dev \
            libxinerama-dev libxcursor-dev libgl1-mesa-dev

      - name: Install raylib (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew update
          brew install raylib

      - name: Set up MSYS2 (Windows)
        if: matrix.os == 'windows-latest'
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: >-
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-pkg-config
            mingw-w64-x86_64-raylib

      - name: Build (Ubuntu/macOS)
        if: matrix.os != 'windows-latest'
        run: |
          go mod download
          go build -v -o dist/asteroids-${{ runner.os }} .

      - name: Build (Windows)
        if: matrix.os == 'windows-latest'
        shell: msys2 {0}
        env:
          PKG_CONFIG_PATH: /mingw64/lib/pkgconfig
        run: |
          go mod download
          go build -v -o dist/asteroids-Windows.exe .

      - name: Upload to Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
